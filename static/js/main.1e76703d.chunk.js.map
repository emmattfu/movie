{"version":3,"sources":["icons/facebook.svg","icons/twitter.svg","icons/instagram-social-network-logo-of-photo-camera.svg","icons/homepage.svg","Api.js","redux/actions.js","redux/types.js","pages/Home.js","components/MovieComponent/BigWithMovie.js","components/MovieComponent/SmallWidthMovie.js","components/MovieComponent/MovieComponent.js","pages/movies/Movies.js","pages/movies/TopRatedMovies.js","pages/movies/UpcomingMovies.js","pages/movies/NowPlayingMovies.js","components/CastComponent.js","components/SocialComponent.js","components/MovieDetailsComponent.js","components/BackgroundComponent.js","pages/movies/MovieDetails.js","components/ShowComponent/BigWidthShow.js","components/ShowComponent/SmallWidthShow.js","components/ShowComponent/ShowComponent.js","pages/tv/Shows.js","pages/tv/OnTvShows.js","pages/tv/AiringTodayShows.js","pages/tv/TopRatedShows.js","components/CreditsComponent.js","components/ShowDetailsComponent.js","pages/tv/ShowDetails.js","components/PeopleComponent/PeopleComponent.js","pages/People.js","pages/people/PeopleDetailsBigWidth.js","pages/people/PeopleDetailsSmallWidth.js","pages/people/PeopleDetails.js","components/NavComponent.js","components/HeaderComponent/HeaderComponent.js","components/FooterComponent/FooterComponent.js","components/SearchComponent/SearchComponent.js","components/SearchCardComponent.js","pages/Search.js","components/Other.js","App.js","serviceWorker.js","redux/appReducer.js","redux/dataReducer.js","redux/rootReducer.js","index.js"],"names":["module","exports","api","key","name","API","getMovies","pageInfo","dispatch","a","fetch","type","page","data","json","movies","results","payload","getShows","pageCount","total_pages","getPeople","people","getPersonInfo","id","person","getPersonSocial","data2","social","getPersonMovies","data3","Home","useState","setMovies","useEffect","then","resp","slice","shows","setShows","className","map","el","i","to","src","backdrop_path","alt","original_name","title","BigWithMovie","movie","poster_path","Date","release_date","toLocaleDateString","overview","length","SmallWidthMovie","MovieComponent","useSelector","state","dataReducer","winWidth","appReducer","width","Movies","setPage","useDispatch","pages","push","onChange","event","target","value","TopRatedMovies","UpcomingMovies","NowPlayingMovies","CastComponent","cast","Array","from","profile_path","character","SocialComponent","accounts","homepage","facebook_id","href","rel","facebook","twitter_id","twitter","instagram_id","instagram","homepage_icon","MovieDetailsComponent","director","screenplay","original_title","getFullYear","BackgroundComponent","props","backdrop","MovieDetails","match","setMovie","setCast","params","credits","setCredits","setAccounts","crew","forEach","job","BigWidthShow","show","first_air_date","SmallWidthShow","ShowComponent","Shows","pagesNumber","OnTVShows","AiringTodayShows","TopRatedShows","CreditsComponent","credit_id","ShowDetailsComponent","created_by","ShowDetails","setShow","actors","setActors","PeopleComponent","elem","known_for","film","People","PeopleDetailsBigWidth","actor","filteredMovies","sort","prev","next","vote_count","reverse","known_for_department","gender","birthday","place_of_birth","also_known_as","biography","PeopleDetailsSmallWidth","PeopleDetails","pageWidth","getPerson","NavComponent","onClick","document","querySelector","classList","toggle","HeaderComponent","FooterComponent","SearchComponent","inputRef","useRef","count","setCount","redirect","setRedirect","onSubmit","e","preventDefault","current","placeholder","ref","SearchCardComponent","item","media_type","Search","result","setResult","search","Other","App","window","addEventListener","innerWidth","exact","path","component","Boolean","location","hostname","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e76703d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.422e7665.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.c95cbd88.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram-social-network-logo-of-photo-camera.3cc0081d.svg\";","module.exports = __webpack_public_path__ + \"static/media/homepage.3bece275.svg\";","\r\n\r\nfunction api() {\r\n    return {\r\n        key: 'd450a8982302ef9a2eb4610932a1e472',\r\n        name: 'https://api.themoviedb.org/3'\r\n    }\r\n}\r\n\r\nexport default api","import { SEARCH, GET_WIDTH, GET_MOVIES, GET_SHOWS, GET_PEOPLE, GET_PERSON, CLEAR_PERSON_INFO } from \"./types\";\r\nimport api from \"../Api\";\r\n\r\nexport function search(text) {\r\n    return {type: SEARCH, payload: text}\r\n}\r\n\r\nexport function getWidth(width) {\r\n    return {type: GET_WIDTH, payload: width}\r\n}\r\n\r\n\r\nconst API = api()\r\n\r\nexport function getMovies(pageInfo) {\r\n    return async function(dispatch) {\r\n        const data = await fetch(`${API.name}/movie/${pageInfo.type}?api_key=${API.key}&language=en-US&page=${pageInfo.page}`)\r\n        const json = await data.json()\r\n        const movies = json.results\r\n        dispatch({type: GET_MOVIES, payload: movies})\r\n    }\r\n}\r\n\r\nexport function getShows(pageInfo) {\r\n    return async function(dispatch) {\r\n        const data = await fetch(`${API.name}/tv/${pageInfo.type}?api_key=${API.key}&language=en-US&page=${pageInfo.page}`)\r\n        const json = await data.json()\r\n        const movies = json.results\r\n        const pageCount = json.total_pages\r\n        dispatch({type: GET_SHOWS, payload: {movies, pageCount}})\r\n    }\r\n}\r\n\r\nexport function getPeople(page) {\r\n    return async function(dispatch) {\r\n        const data = await fetch(`${API.name}/person/popular?api_key=${API.key}&language=en-US&page=${page}`)\r\n        const json = await data.json()\r\n        const people = json.results\r\n        dispatch({type: GET_PEOPLE, payload: people})\r\n    }\r\n}\r\n\r\nexport function getPerson(id) {\r\n    return async function(dispatch) {\r\n        dispatch(clearPersonInfo())\r\n        const person = await getPersonInfo(id)\r\n        const social = await getPersonSocial(id)\r\n        const movies = await getPersonMovies(id)\r\n\r\n        dispatch({type: GET_PERSON, payload: {person, social, movies}})\r\n\r\n    }\r\n}\r\n\r\n\r\nasync function getPersonInfo(id) {\r\n    const data = await fetch(`${API.name}/person/${id}?api_key=${API.key}&language=en-US`)\r\n    const person = await data.json()\r\n    return person\r\n}\r\n\r\nasync function getPersonSocial(id) {\r\n    const data2 = await fetch(`${API.name}/person/${id}/external_ids?api_key=${API.key}&language=en-US`)\r\n    const social = await data2.json()\r\n    return social\r\n}\r\n\r\nasync function getPersonMovies(id) {\r\n    const data3 = await fetch(`${API.name}/person/${id}/movie_credits?api_key=${API.key}&language=en-US`)\r\n    const movies = await data3.json()\r\n    return movies\r\n}\r\n\r\nexport function clearPersonInfo() {\r\n    return {type: CLEAR_PERSON_INFO, payload: []}\r\n}","export const SEARCH = 'SEARCH'\r\nexport const GET_WIDTH = 'GET_WIDTH'\r\nexport const GET_MOVIES = 'GET_MOVIES'\r\nexport const GET_SHOWS = 'GET_SHOWS'\r\nexport const GET_PEOPLE = 'GET_PEOPLE'\r\nexport const GET_PERSON = 'GET_PERSON'\r\nexport const GET_PERSON_INFO = 'GET_PERSON_INFO'\r\nexport const CHANGE_PAGE_MOVIES = 'CHANGE_PAGE_MOVIES'\r\nexport const CHANGE_PAGE_SHOWS = 'CHANGE_PAGE_SHOWS'\r\nexport const POPULAR_MOVIES = 'popular'\r\nexport const TOPRATED_MOVIES = 'top_rated'\r\nexport const UPCOMING_MOVIES = 'upcoming'\r\nexport const NOW_PLAYING_MOVIES = 'now_playing'\r\nexport const POPULAR_SHOWS = 'popular'\r\nexport const TOPRATED_SHOWS = 'top_rated'\r\nexport const ON_TV_SHOWS = 'on_the_air'\r\nexport const AIRINT_TODAY_SHOWS = 'airing_today'\r\nexport const CLEAR_PERSON_INFO = 'CLEAR_PERSON_INFO'","import React, { useState, useEffect } from \"react\";\r\nimport './Home.css';\r\nimport api from \"../Api.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst API = api();\r\n\r\nfunction Home() {\r\n  const [movies, setMovies] = useState(\"\");\r\n  useEffect(() => {\r\n    fetch(\r\n      `${API.name}/movie/now_playing?api_key=${API.key}&region=US&page=1`\r\n    )\r\n      .then(resp => resp.json())\r\n      .then(resp => {\r\n        setMovies(resp.results.slice(0, 3));\r\n      });\r\n  }, []);\r\n\r\n  const [shows, setShows] = useState(\"\");\r\n  useEffect(() => {\r\n    fetch(`${API.name}/tv/on_the_air?api_key=${API.key}&language=en-US&page=1`)\r\n      .then(resp => resp.json())\r\n      .then(resp => {\r\n        setShows(resp.results.slice(0, 3));\r\n      });\r\n  }, []);\r\n\r\n  if (!shows || !movies) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home-top\">\r\n        <div className=\"left\">\r\n          <div className=\"home-top-text\">\r\n            <h2>Discussion</h2>\r\n            <p>CATCH UP NOW</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"home-top-text\">\r\n            <h2>That's a Wrap!</h2>\r\n            <p>READ THE 2019 RECAP</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"home-content\">\r\n          <div className=\"home-tv\">\r\n            <div className=\"home-content-header\">\r\n              <p>On TV</p>\r\n            </div>\r\n            <div className=\"home-tv-posters\">\r\n              {shows.map((el, i) => {\r\n                return (\r\n                  <div className=\"home-poster\" key={el.id} id={`id_${i}`}>\r\n                    <Link to={`/shows/details/${el.id}`}>\r\n                      <img\r\n                        src={`https://image.tmdb.org/t/p/original/${el.backdrop_path}`}\r\n                        alt=\"home-tv-poster\"\r\n                      />\r\n                      <div className=\"home-poster-text\">\r\n                        {\" \"}\r\n                        {el.original_name}\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"home-movies\">\r\n            <div className=\"home-content-header\">\r\n              <p>In Theatres</p>\r\n            </div>\r\n            <div className=\"home-movies-posters\">\r\n              {movies.map((el, i) => {\r\n                return (\r\n                  <div className=\"home-poster\" id={`id_${i + 3}`} key={el.id}>\r\n                    <Link to={`/movies/details/${el.id}`}>\r\n                      <img\r\n                        src={`https://image.tmdb.org/t/p/original/${el.backdrop_path}`}\r\n                        alt=\"home-movie-poster\"\r\n                      />\r\n                      <div className=\"home-poster-text\"> {el.title}</div>\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nfunction BigWithMovie({movies}) {\r\n\r\n    return(\r\n        movies.map(movie => {\r\n        return (\r\n            <div className=\"movie-card\" key={movie.id}>\r\n            <div className=\"movie-poster\">\r\n                <NavLink to={`/movies/details/${movie.id}`}>\r\n                    <img\r\n                    src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\r\n                    alt=\"poster\"\r\n                    />\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"movie-info\">\r\n                <p className=\"title\">{movie.title}</p>\r\n                <p className=\"release-date\">{new Date(movie.release_date).toLocaleDateString()}</p>\r\n                <p className=\"overview\">{movie.overview.length < 350 ? movie.overview: movie.overview.slice(0,350) + '...'}</p>\r\n                \r\n            </div>\r\n            </div>\r\n        );\r\n        })\r\n    )\r\n}\r\n\r\nexport default BigWithMovie","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nfunction SmallWidthMovie({movies}) {\r\n    return(\r\n        <>\r\n       { movies.map(movie => {\r\n            return (\r\n              <div className=\"movie-card\" key={movie.id}>\r\n                 <div className=\"movie-poster\">\r\n                  <NavLink to={`/movies/details/${movie.id}`}>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/original/${movie.backdrop_path}`}\r\n                    alt=\"poster\"\r\n                  />\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                  <p className=\"title\">{movie.title}</p>\r\n                  <p className=\"release-date\">{new Date(movie.release_date).toLocaleDateString()}</p>\r\n                \r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n          </>\r\n    )\r\n}\r\n\r\nexport default SmallWidthMovie","import React from \"react\";\r\nimport \"./MovieComponent.css\";\r\nimport BigWidthMovie from \"./BigWithMovie\";\r\nimport SmallWidthMovie from \"./SmallWidthMovie\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction MovieComponent() {\r\n  const movies = useSelector(state => state.dataReducer.movies)\r\n  const winWidth = useSelector(state => state.appReducer.width)\r\n\r\n  if (!movies.length) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {winWidth > 1000 ? (\r\n        <BigWidthMovie movies={movies} />\r\n      ) : (\r\n        <SmallWidthMovie movies={movies} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieComponent;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport MovieComponent from \"../../components/MovieComponent/MovieComponent.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getMovies } from \"../../redux/actions.js\";\r\nimport { POPULAR_MOVIES } from \"../../redux/types.js\";\r\n\r\nfunction Movies() {\r\n  const [page, setPage] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const pages = [];\r\n\r\n  dispatch(getMovies({page, type: POPULAR_MOVIES}))\r\n\r\n  for (let i = 1; i <= 100; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  function selectPage(event) {\r\n    setPage(event.target.value)\r\n    dispatch(getMovies({page, type: POPULAR_MOVIES}))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        \r\n        <div className=\"page-header\">\r\n          <h1>Movies</h1>\r\n          <div>Page:  \r\n            <select name=\"page-number\" onChange={selectPage}>\r\n              {pages.map(el => <option key={el}>{el}</option>)}\r\n            </select></div>\r\n        </div>\r\n        <div className=\"content-wrapper\">\r\n          <MovieComponent />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import React, { useState } from \"react\";\r\nimport MovieComponent from \"../../components/MovieComponent/MovieComponent.js\";\r\nimport { getMovies } from \"../../redux/actions.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TOPRATED_MOVIES } from \"../../redux/types.js\";\r\n\r\nfunction TopRatedMovies() {\r\n  const dispatch = useDispatch()\r\n  const [page, setPage] = useState(1)\r\n  const pages = [];\r\n  \r\n  dispatch(getMovies({page, type: TOPRATED_MOVIES}))\r\n\r\n  for (let i = 1; i <= 100; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  function selectPage(event) {\r\n    setPage(event.target.value)\r\n    dispatch(getMovies({page, type: TOPRATED_MOVIES}))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n      <div className=\"page-header\">\r\n          <h1>Top Movies</h1>\r\n          <div>Page:  \r\n            <select name=\"page-number\" onChange={selectPage}>\r\n              {pages.map(el => <option key={el}>{el}</option>)}\r\n            </select></div>\r\n        </div>\r\n        <div className=\"content-wrapper\">\r\n          <MovieComponent  />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopRatedMovies;\r\n","import React, { useState } from \"react\";\r\nimport MovieComponent from \"../../components/MovieComponent/MovieComponent.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getMovies } from \"../../redux/actions.js\";\r\nimport { UPCOMING_MOVIES } from \"../../redux/types.js\";\r\n\r\nfunction UpcomingMovies() {\r\n  const dispatch = useDispatch()\r\n  const [page, setPage] = useState(1)\r\n  const pages = [];\r\n \r\n  dispatch(getMovies({page, type: UPCOMING_MOVIES}))\r\n\r\n  for (let i = 1; i <= 100; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  function selectPage(event) {\r\n    setPage(event.target.value)\r\n    dispatch(getMovies({page, type: UPCOMING_MOVIES}))\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"page-header\">\r\n          <h1>Upcoming Movies</h1>\r\n          <div>Page:  \r\n            <select name=\"page-number\" onChange={selectPage}>\r\n              {pages.map(el => <option key={el}>{el}</option>)}\r\n            </select></div>\r\n        </div>\r\n        <div className=\"content-wrapper\">\r\n          <MovieComponent />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpcomingMovies;\r\n","import React, { useState } from \"react\";\r\nimport MovieComponent from \"../../components/MovieComponent/MovieComponent.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getMovies } from \"../../redux/actions.js\";\r\nimport { NOW_PLAYING_MOVIES } from \"../../redux/types.js\";\r\n\r\nfunction NowPlayingMovies() {\r\n  const dispatch = useDispatch()\r\n  const [page, setPage] = useState(1)\r\n  const pages = [];\r\n  \r\n  dispatch(getMovies({page, type: NOW_PLAYING_MOVIES}))\r\n\r\n  for (let i = 1; i <= 100; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  function selectPage(event) {\r\n    setPage(event.target.value)\r\n    dispatch(getMovies({page, type: NOW_PLAYING_MOVIES}))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"page-header\">\r\n          <h1>Now Playing</h1>\r\n          <div>\r\n            Page:\r\n            <select name=\"page-number\" onChange={selectPage}>\r\n              {pages.map(el => (\r\n                <option key={el}>{el}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"content-wrapper\">\r\n          <MovieComponent />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NowPlayingMovies;\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction CastComponent({ cast, type }) {\r\n  return (\r\n    <>\r\n      <div className=\"cast\">\r\n        <div className=\"container\">\r\n         <p className=\"details-header\">{type === 'movie' ? 'Top Billed Cast' : 'Series Cast'}</p>\r\n          <div className=\"cast-wrapper\">\r\n            {cast.length ?  Array.from(cast).map(el => {\r\n             \r\n             return (\r\n               <div className=\"cast-card\" key={el.id}>\r\n                 <Link to={`/people/details/${el.id}`}>\r\n                 <img\r\n                   src={`https://image.tmdb.org/t/p/original/${el.profile_path}`}\r\n                   alt=\"actor-img\"\r\n                 ></img>\r\n                 </Link>\r\n                 <div className=\"cast-info\">\r\n                 <p className=\"cast-name\">{el.name}</p>\r\n                 <p>{el.character}</p>\r\n                 </div>\r\n               </div>\r\n             );\r\n           }) : <p className=\"no-cast-text\">\"We don't have any info about actors\"</p>}\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CastComponent;\r\n","import React from \"react\";\r\nimport facebook from \"../icons/facebook.svg\";\r\nimport twitter from \"../icons/twitter.svg\";\r\nimport instagram from \"../icons/instagram-social-network-logo-of-photo-camera.svg\";\r\nimport homepage_icon from \"../icons/homepage.svg\";\r\n\r\nfunction SocialComponent({accounts, homepage}) {\r\n  return (\r\n    <>\r\n      {!accounts.facebook_id ? '' : \r\n      <a\r\n        href={`http://facebook.com/${accounts.facebook_id}`}\r\n        title=\"Visit Facebook\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img className=\"social-icon\" src={facebook} alt=\"facebook-icon\"></img>\r\n      </a>}\r\n\r\n      {!accounts.twitter_id ? '' : \r\n      <a\r\n        href={`http://twitter.com/${accounts.twitter_id}`}\r\n        title=\"Visit Twitter\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img className=\"social-icon\" src={twitter} alt=\"twitter-icon\"></img>\r\n      </a>}\r\n\r\n      {!accounts.instagram_id ? '' : \r\n      <a\r\n        href={`http://instagram.com/${accounts.instagram_id}`}\r\n        title=\"Visit Instagram\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img className=\"social-icon\" src={instagram} alt=\"instagram-icon\"></img>\r\n      </a>}\r\n\r\n      {!homepage ? '' : \r\n      <a\r\n        href={homepage}\r\n        title=\"Visit Homepage\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img className=\"social-icon\" src={homepage_icon} alt=\"homepage-icon\"></img>\r\n      </a>}\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default SocialComponent;\r\n","import React from \"react\";\r\nimport SocialComponent from \"./SocialComponent.js\";\r\n\r\nfunction MovieDetailsComponent({ movie, accounts, director, screenplay}) {\r\n  return (\r\n    <div className=\"details\">\r\n      <div className=\"container\">\r\n        <div className=\"details-wrapper\">\r\n          <div className=\"details-poster\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\r\n              alt=\"poster\"\r\n            ></img>\r\n          </div>\r\n          <div className=\"details-content\">\r\n            <h1 className=\"details-name\">\r\n              {movie.original_title}\r\n              <span className=\"details-release-date\">\r\n                ({new Date(movie.release_date).getFullYear() || \"\"})\r\n              </span>\r\n            </h1>\r\n            <div className=\"overview\">\r\n              <p className=\"details-header\">Overview</p>\r\n              <p className=\"details-text\">{movie.overview}</p>\r\n            </div>\r\n\r\n            <p className=\"details-header featured\">Featured Crew</p>\r\n            <div className=\"credits\">\r\n              <div className=\"credits-director\">\r\n                <p className=\"details-text big\">Director</p>\r\n                <p className=\"details-text\">{director}</p>\r\n              </div>\r\n              <div className=\"credits-screenplay\">\r\n                <p className=\"details-text big\">Screenplay</p>\r\n                <p className=\"details-text\">{screenplay}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"social\">\r\n              <p className=\"details-header\">Social media</p>\r\n              <SocialComponent accounts={accounts} homepage={movie.homepage} />\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsComponent;\r\n","import React from \"react\";\r\n\r\nfunction BackgroundComponent(props) {\r\n  return (\r\n    <div className=\"details-bg\">\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/original/${props.backdrop}`}\r\n        alt=\"background\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackgroundComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../Api.js\";\r\nimport CastComponent from \"../../components/CastComponent.js\";\r\nimport MovieDetailsComponent from \"../../components/MovieDetailsComponent.js\";\r\nimport BackgroundComponent from '../../components/BackgroundComponent.js';\r\n\r\nconst API = api();\r\nlet director, screenplay;\r\n\r\nfunction MovieDetails({ match }) {\r\n  const [movie, setMovie] = useState(null);\r\n  const [cast, setCast] = useState(\"\");\r\n  const id = match.params.id;\r\n  useEffect(() => {\r\n    fetch(`${API.name}/movie/${id}?api_key=${API.key}&language=en-US`)\r\n      .then(resp => resp.json())\r\n      .then(resp => {\r\n        setMovie(resp);\r\n      });\r\n  }, [id]);\r\n\r\n  const [credits, setCredits] = useState(null);\r\n  useEffect(() => {\r\n    fetch(`${API.name}/movie/${id}/credits?api_key=${API.key}&language=en-US`)\r\n      .then(resp => resp.json())\r\n      .then(resp => {\r\n        setCredits(resp);\r\n        setCast(resp.cast.slice(0, 5));\r\n      });\r\n  }, [id]);\r\n\r\n  const [accounts, setAccounts] = useState(\"\");\r\n  useEffect(() => {\r\n    fetch(`${API.name}/movie/${id}/external_ids?api_key=${API.key}`)\r\n      .then(resp => resp.json())\r\n      .then(resp => {\r\n        setAccounts(resp);\r\n      });\r\n  }, [id]);\r\n\r\n  if (credits) {\r\n    credits.crew.forEach(el => {\r\n      if (el.job === \"Director\") director = el.name;\r\n      if (el.job === \"Screenplay\") screenplay = el.name;\r\n    });\r\n  }\r\n\r\n  if (!movie || !credits) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackgroundComponent backdrop={movie.backdrop_path}/>\r\n      <MovieDetailsComponent\r\n        movie={movie}\r\n        accounts={accounts}\r\n        director={director}\r\n        screenplay={screenplay}\r\n      />\r\n      <CastComponent cast={cast} type=\"movie\"/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction BigWidthShow({ show }) {\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"movie-card\" key={show.id}>\r\n        <div className=\"movie-poster\">\r\n          <NavLink to={`/shows/details/${show.id}`}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\r\n              alt=\"poster\"\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"movie-info\">\r\n          <p className=\"title\">{show.original_name}</p>\r\n          <p className=\"release-date\">{show.first_air_date}</p>\r\n          <p className=\"overview\">\r\n            {show.overview.length < 150\r\n              ? show.overview\r\n              : show.overview.slice(0, 150) + \"...\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BigWidthShow;\r\n","import React from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction SmallWidthShow({ show }) {\r\n  return (\r\n    <>\r\n      <div className=\"movie-card\" key={show.id}>\r\n        <div className=\"movie-poster\">\r\n          <NavLink to={`/shows/details/${show.id}`}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original/${show.backdrop_path}`}\r\n              alt=\"poster\"\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"movie-info\">\r\n          <p className=\"title\">{show.original_name}</p>\r\n          <p className=\"release-date\">{show.first_air_date}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SmallWidthShow;\r\n","import React from \"react\";\r\nimport BigWidthShow from \"./BigWidthShow\";\r\nimport SmallWidthShow from \"./SmallWidthShow\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ShowComponent() {\r\n  const shows = useSelector(state => state.dataReducer.shows);\r\n  const winWidth = useSelector(state => state.appReducer.width);\r\n\r\n  if (!shows.length) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {shows.map(show => {\r\n        return winWidth > 1000 ? (\r\n          <BigWidthShow show={show} key={show.id} />\r\n        ) : (\r\n          <SmallWidthShow show={show}  key={show.id}/>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowComponent;\r\n","import React, { useState } from \"react\";\r\nimport ShowComponent from \"../../components/ShowComponent/ShowComponent.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getShows } from \"../../redux/actions.js\";\r\nimport {POPULAR_SHOWS} from '../../redux/types'\r\n\r\n\r\nfunction Shows() {\r\n\r\n  const pagesNumber = useSelector(state => state.dataReducer.pageCount)\r\n  const dispatch = useDispatch()\r\n  const [page, setPage] = useState(1)\r\n  const pages = [];\r\n\r\n  dispatch(getShows({page, type: POPULAR_SHOWS}))\r\n\r\n  for (let i = 1; i <= pagesNumber; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  function selectPage(event) {\r\n    setPage(event.target.value);\r\n    dispatch(getShows({page, type: POPULAR_SHOWS}))\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"page-header\">\r\n          <h1>Shows</h1>\r\n            <div>Page:  \r\n              <select name=\"page-number\" onChange={selectPage}>\r\n                {pages.map(el => <option key={el}>{el}</option>)}\r\n              </select></div>\r\n        </div>\r\n        <div className=\"content-wrapper\">\r\n            <ShowComponent />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Shows;\r\n","import React, {useState} from 'react';\r\nimport ShowComponent from \"../../components/ShowComponent/ShowComponent.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getShows } from '../../redux/actions.js';\r\nimport { ON_TV_SHOWS } from '../../redux/types.js';\r\n\r\n\r\nfunction OnTVShows() {\r\n\r\n  const pagesNumber = useSelector(state => state.dataReducer.pageCount)\r\n  const dispatch = useDispatch()\r\n  const [page, setPage] = useState(1)\r\n  const pages = []\r\n \r\n  dispatch(getShows({page, type: ON_TV_SHOWS}))\r\n\r\n  for (let i = 1; i <= pagesNumber; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  function selectPage(event) {\r\n    setPage(event.target.value)\r\n    dispatch(getShows({page, type: ON_TV_SHOWS}))\r\n  }\r\n\r\n    return (\r\n        <>\r\n          <div className=\"container\">\r\n            <div className=\"page-header\">\r\n              <h1>Currently Airing TV Shows</h1>\r\n              <div>Page:  \r\n                <select name=\"page-number\" onChange={selectPage}>\r\n                  {pages.map(el => <option key={el}>{el}</option>)}\r\n                </select></div>\r\n            </div>\r\n            <div className=\"content-wrapper\">\r\n              <ShowComponent />)\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default OnTVShows","import React, {useState} from 'react';\r\nimport ShowComponent from \"../../components/ShowComponent/ShowComponent.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getShows } from '../../redux/actions.js';\r\nimport { AIRINT_TODAY_SHOWS } from '../../redux/types.js';\r\n\r\nfunction AiringTodayShows() {\r\n\r\n  const pagesNumber = useSelector(state => state.dataReducer.pageCount)\r\n  const dispatch = useDispatch()\r\n  const [page, setPage] = useState(1)\r\n  const pages = [];\r\n  \r\n  dispatch(getShows({page, type: AIRINT_TODAY_SHOWS}))\r\n\r\n  for (let i = 1; i <= pagesNumber; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  function selectPage(event) {\r\n    setPage(event.target.value)\r\n    dispatch(getShows({page, type: AIRINT_TODAY_SHOWS}))\r\n  }\r\n\r\n\r\n  return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"page-header\">\r\n          <h1>Currently Airing TV Shows</h1>\r\n            <div>Page:  \r\n              <select name=\"page-number\" onChange={selectPage}>\r\n                {pages.map(el => <option key={el}>{el}</option>)}\r\n              </select></div>\r\n            </div>\r\n          <div className=\"content-wrapper\">\r\n            <ShowComponent />)\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AiringTodayShows","import React, { useState} from \"react\";\r\nimport ShowComponent from \"../../components/ShowComponent/ShowComponent.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getShows } from \"../../redux/actions.js\";\r\nimport {TOPRATED_SHOWS} from '../../redux/types'\r\n\r\nfunction TopRatedShows() {\r\n\r\n  const pagesNumber = useSelector(state => state.dataReducer.pageCount)\r\n  const dispatch = useDispatch()\r\n  const [page, setPage] = useState(1);\r\n  const pages = [];\r\n\r\n  dispatch(getShows({page, type: TOPRATED_SHOWS}))\r\n  \r\n  for (let i = 1; i <= pagesNumber; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  function selectPage(event) {\r\n    setPage(event.target.value);\r\n    dispatch(getShows({page, type: TOPRATED_SHOWS}))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"page-header\">\r\n          <h1>Top Rated Tv Shows</h1>\r\n            <div>Page:  \r\n              <select name=\"page-number\" onChange={selectPage}>\r\n                {pages.map(el => <option key={el}>{el}</option>)}\r\n              </select></div>\r\n            </div>\r\n        <div className=\"content-wrapper\">\r\n            <ShowComponent />\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopRatedShows;\r\n","import React from \"react\";\r\n\r\nfunction CreditsComponent({ credits, type }) {\r\n  if (type === \"show\") {\r\n    return (\r\n      <>\r\n        <p className=\"details-header featured\">Featured Crew</p>\r\n        <div className=\"credits\">\r\n          {credits.map(el => {\r\n            return (\r\n              <div className=\"credits-director creator\" key={el.credit_id}>\r\n                <p className=\"details-text big\">Creator</p>\r\n                <p className=\"details-text\">{el.name}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreditsComponent;\r\n","import React from \"react\";\r\nimport SocialComponent from \"./SocialComponent.js\";\r\nimport CreditsComponent from \"./CreditsComponent\";\r\n\r\nfunction ShowDetailsComponent({ show, accounts}) {\r\n  return (\r\n    <div className=\"details\">\r\n      <div className=\"container\">\r\n        <div className=\"details-wrapper\">\r\n          <div className=\"details-poster\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\r\n              alt=\"poster\"\r\n            ></img>\r\n          </div>\r\n          <div className=\"details-content\">\r\n            <h1 className=\"details-name\">\r\n              {show.name}\r\n              <span className=\"details-release-date\">\r\n                ({new Date(show.first_air_date).getFullYear() || \"\"})\r\n              </span>\r\n            </h1>\r\n            <div className=\"overview\">\r\n              <p className=\"details-header\">Overview</p>\r\n              <p className=\"details-text\">{show.overview}</p>\r\n            </div>\r\n            \r\n            <CreditsComponent credits={show.created_by} type=\"show\"/>\r\n            \r\n            <div className=\"social\">\r\n              <p className=\"details-header\">Social media</p>\r\n              <SocialComponent accounts={accounts} homepage={show.homepage} />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowDetailsComponent;","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../Api.js\";\r\nimport BackgroundComponent from \"../../components/BackgroundComponent.js\";\r\nimport ShowDetailsComponent from \"../../components/ShowDetailsComponent.js\";\r\nimport CastComponent from \"../../components/CastComponent.js\"\r\n\r\nconst API = api();\r\n\r\nfunction ShowDetails({ match }) {\r\n  const id = match.params.id;\r\n\r\n  const [show, setShow] = useState(\"\");\r\n  useEffect(() => {\r\n    fetch(`${API.name}/tv/${id}?api_key=${API.key}&language=en-US`)\r\n      .then(resp => resp.json())\r\n      .then(resp => setShow(resp))\r\n  }, [id]);\r\n\r\n  const [accounts, setAccounts] = useState(\"\");\r\n  useEffect(() => {\r\n    fetch(`${API.name}/tv/${id}/external_ids?api_key=${API.key}&language=en-US`)\r\n      .then(resp => resp.json())\r\n      .then(resp => setAccounts(resp));\r\n  }, [id]);\r\n\r\n  const [actors, setActors] = useState(\"\");\r\n  useEffect(() => {\r\n    fetch(`${API.name}/tv/${id}/credits?api_key=${API.key}&language=en-US`)\r\n    .then(resp => resp.json())\r\n    .then(resp => setActors(resp.cast.slice(0,5)))\r\n  }, [id])\r\n\r\n  if (!show || !actors) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackgroundComponent backdrop={show.backdrop_path} />\r\n      <ShowDetailsComponent show={show} accounts={accounts} />\r\n      <CastComponent cast={actors}  type=\"show\"/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowDetails;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction PeopleComponent() {\r\n  const people = useSelector(state => state.dataReducer.people);\r\n\r\n  if (!people.length) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-wrapper people\">\r\n      {people.map(elem => {\r\n        return (\r\n          <div className=\"people-card\" key={elem.id}>\r\n            <div className=\"people-poster\">\r\n              <NavLink to={`/people/details/${elem.id}`}>\r\n                <img\r\n                  className=\"people-img\"\r\n                  src={`https://image.tmdb.org/t/p/original/${elem.profile_path}`}\r\n                  alt=\"popular-people\"\r\n                ></img>\r\n              </NavLink>\r\n            </div>\r\n            <div className=\"people-info\">\r\n              <p className=\"people-name\">{elem.name}</p>\r\n              {elem.known_for.map((film, i) => {\r\n                return (\r\n                  <div key={i}>\r\n                    {!film.title || film.title.length < 28 ? (\r\n                      <p className=\"people-known-for\">\r\n                        {film.title || film.original_name}\r\n                      </p>\r\n                    ) : (\r\n                      <p className=\"people-known-for\">\r\n                        {film.title.slice(0, 28) + \"...\" || film.original_name}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PeopleComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPeople } from \"../redux/actions\";\r\nimport PeopleComponent from \"../components/PeopleComponent/PeopleComponent\";\r\n\r\nfunction People() {\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(1);\r\n  const pages = [];\r\n\r\n  dispatch(getPeople(page));\r\n\r\n  for (let i = 1; i <= 100; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  function selectPage(event) {\r\n    setPage(event.target.value);\r\n    dispatch(getPeople(page));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"page-header\">\r\n          <h1>Popular People</h1>\r\n          <div>\r\n            Page:\r\n            <select name=\"page-number\" onChange={selectPage}>\r\n              {pages.map(el => (\r\n                <option key={el}>{el}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <PeopleComponent />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default People;\r\n","import React from 'react'\r\nimport SocialComponent from '../../components/SocialComponent'\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction PeopleDetailsBigWidth() {\r\n\r\n  const actor = useSelector(state => state.dataReducer.person.person)\r\n  const social = useSelector(state => state.dataReducer.person.social)\r\n  const movies = useSelector(state => state.dataReducer.person.movies)\r\n\r\n    if (!actor || !movies) {\r\n      return(\r\n        <div className=\"container\">\r\n          <h1>Loading...</h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const filteredMovies = movies.cast\r\n    .sort((prev, next) => prev.vote_count - next.vote_count)\r\n    .reverse();\r\n\r\n    return (\r\n        <>\r\n      <div className=\"container\">\r\n        <div className=\"people-details\">\r\n          <div className=\"people-details-aside\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original/${actor.profile_path}`}\r\n              alt=\"actor\"\r\n            />\r\n            <div className=\"people-details-personal-info\">\r\n              <div>\r\n                <h2>Personal Info </h2>\r\n              </div>\r\n\r\n              <p className=\"sub-info\">\r\n                Known For\r\n                <span className=\"sub-info-text\">\r\n                  {actor.known_for_department}\r\n                </span>\r\n              </p>\r\n              <p className=\"sub-info\">\r\n                Gender\r\n                <span className=\"sub-info-text\">\r\n                  {actor.gender === 1 ? \"Female\" : \"Male\"}\r\n                </span>\r\n              </p>\r\n              <p className=\"sub-info\">\r\n                Birthday\r\n                <span className=\"sub-info-text\">{actor.birthday ? actor.birthday : '-'}</span>\r\n              </p>\r\n              <p className=\"sub-info\">\r\n                Place of Birth\r\n                <span className=\"sub-info-text\">{actor.place_of_birth ? actor.place_of_birth : '-'}</span>\r\n              </p>\r\n              <p className=\"sub-info\">\r\n                Official Site\r\n                <span className=\"sub-info-text\">\r\n                  {actor.homepage ? <a target=\"_blank\" rel=\"noopener noreferrer\" href={actor.homepage}>{actor.homepage}</a> : \"-\"}\r\n                </span>\r\n              </p>\r\n              <p className=\"sub-info\">Also Known As</p>\r\n              <ul className=\"also-known-as\">\r\n                {actor.also_known_as.map((name, i) => {\r\n                  return (\r\n                    <li className=\"sub-info-text\" key={i}>\r\n                      {name}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"people-details-content\">\r\n            <div className=\"people-details-content-header\">\r\n              <p className=\"people-details-content-title\">{actor.name}</p>\r\n              <div className=\"people-details-social\">\r\n                <SocialComponent accounts={social} homepage={actor.homepage} />\r\n              </div>\r\n            </div>\r\n            <p className=\"biography-title\">Bigraphy</p>\r\n            <p className=\"people-details-content-biography\">\r\n              {actor.biography ? actor.biography : `We don't have a biography for ${actor.name}`}\r\n            </p>\r\n            \r\n            <p className=\"filmed-in-title\">Known For</p>\r\n            {!movies.cast.length ? \"We don't have this info\" :  <div>\r\n            \r\n            <div className=\"filmed-in\">\r\n              {filteredMovies.slice(0, 8).map(el => {\r\n                return (\r\n                  <div className=\"filmed-in-card\" key={el.id}>\r\n                    <Link to={`/movies/details/${el.id}`}>\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/original/${el.poster_path}`}\r\n                      alt=\"filmed-in-movie\"\r\n                    />\r\n                    </Link>\r\n                    <div className=\"filmed-in-card-text\">{el.title}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            </div>}\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PeopleDetailsBigWidth;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SocialComponent from \"../../components/SocialComponent\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nfunction PeopleDetailsSmallWidth() {\r\n\r\n  const actor = useSelector(state => state.dataReducer.person.person)\r\n  const social = useSelector(state => state.dataReducer.person.social)\r\n  const movies = useSelector(state => state.dataReducer.person.movies)\r\n\r\n    if (!actor || !movies) {\r\n      return(\r\n        <div className=\"container\">\r\n          <h1>Loading...</h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n  const filteredMovies = movies.cast\r\n    .sort((prev, next) => prev.vote_count - next.vote_count)\r\n    .reverse();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"people-details small\">\r\n          <div className=\"actor-poster\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original/${actor.profile_path}`}\r\n              alt=\"actor\"\r\n            />\r\n          </div>\r\n\r\n          <p className=\"people-details-content-title\">{actor.name}</p>\r\n\r\n          <div className=\"people-details-social\">\r\n            <SocialComponent accounts={social} homepage={actor.homepage} />\r\n          </div>\r\n\r\n          <p className=\"biography-title\">Bigraphy</p>\r\n          <p className=\"people-details-content-biography\">\r\n            {actor.biography\r\n              ? actor.biography\r\n              : `We don't have a biography for ${actor.name}`}\r\n          </p>\r\n\r\n          <p className=\"filmed-in-title\">Known For</p>\r\n          {!movies.cast.length ? (\r\n            \"We don't have this info\"\r\n          ) : (\r\n            <div>\r\n              <div className=\"filmed-in\">\r\n                {filteredMovies.slice(0, 8).map(el => {\r\n                  return (\r\n                    <div className=\"filmed-in-card\" key={el.id}>\r\n                      <Link to={`/movies/details/${el.id}`}>\r\n                        <img\r\n                          src={`https://image.tmdb.org/t/p/original/${el.poster_path}`}\r\n                          alt=\"filmed-in-movie\"\r\n                        />\r\n                      </Link>\r\n                      <div className=\"filmed-in-card-text\">{el.title}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"people-details-aside\">\r\n          <div className=\"container\">\r\n          <div className=\"people-details-personal-info\">\r\n          <div>\r\n            <h2>Personal Info </h2>\r\n          </div>\r\n\r\n          <p className=\"sub-info\">\r\n            Known For\r\n            <span className=\"sub-info-text\">{actor.known_for_department}</span>\r\n          </p>\r\n          <p className=\"sub-info\">\r\n            Gender\r\n            <span className=\"sub-info-text\">\r\n              {actor.gender === 1 ? \"Female\" : \"Male\"}\r\n            </span>\r\n          </p>\r\n          <p className=\"sub-info\">\r\n            Birthday\r\n            <span className=\"sub-info-text\">\r\n              {actor.birthday ? actor.birthday : \"-\"}\r\n            </span>\r\n          </p>\r\n          <p className=\"sub-info\">\r\n            Place of Birth\r\n            <span className=\"sub-info-text\">\r\n              {actor.place_of_birth ? actor.place_of_birth : \"-\"}\r\n            </span>\r\n          </p>\r\n          <p className=\"sub-info\">\r\n            Official Site\r\n            <span className=\"sub-info-text\">\r\n              {actor.homepage ? (\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={actor.homepage}\r\n                >\r\n                  {actor.homepage}\r\n                </a>\r\n              ) : (\r\n                \"-\"\r\n              )}\r\n            </span>\r\n          </p>\r\n          <p className=\"sub-info\">Also Known As</p>\r\n          <ul className=\"also-known-as\">\r\n            {actor.also_known_as.map((name, i) => {\r\n              return (\r\n                <li className=\"sub-info-text\" key={i}>\r\n                  {name}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n          </div>\r\n       \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PeopleDetailsSmallWidth;\r\n","import React from \"react\";\r\nimport PeopleDetailsBigWidth from \"./PeopleDetailsBigWidth\";\r\nimport PeopleDetailsSmallWidth from \"./PeopleDetailsSmallWidth\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getPerson } from \"../../redux/actions.js\";\r\n\r\n\r\nfunction PeopleDetails({ match }) {\r\n  const id = match.params.id;\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const pageWidth = useSelector(state => state.appReducer.width)\r\n\r\n\r\n  dispatch(getPerson(id))\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {pageWidth < 1000 ? (\r\n        <PeopleDetailsSmallWidth\r\n      \r\n        />\r\n      ) : (\r\n        <PeopleDetailsBigWidth  />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PeopleDetails;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction NavComponent() {\r\n  function BurgerToggleHandle() {\r\n    document.querySelector(\".nav\").classList.toggle(\"show\");\r\n  }\r\n\r\n  return (\r\n      <nav>\r\n        <ul className=\"nav\">\r\n          <li className=\"nav-item-main\">\r\n            <NavLink to=\"/movies\">MOVIES</NavLink>\r\n            <ul className=\"nav movie-nav\">\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/movies/popular\">Popular</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/movies/top-rated\">Top Rated</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/movies/upcoming\">Upcoming</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/movies/now-playing\">Now Playing</NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className=\"nav-item-main\">\r\n            <NavLink to=\"/shows\">TV SHOWS</NavLink>\r\n            <ul className=\"nav movie-nav\">\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/shows/popular\">Popular</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/shows/top-rated\">Top Rated</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/shows/on-tv\">On TV</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/shows/airing-today\">Airing Today</NavLink>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className=\"nav-item-main\">\r\n            <NavLink to=\"/people\">People</NavLink>\r\n          </li>\r\n        </ul>\r\n        <button\r\n          className=\"burger\"\r\n          type=\"button\"\r\n          id=\"burger\"\r\n          onClick={BurgerToggleHandle}\r\n        >\r\n          <span className=\"burger-item\"></span>\r\n        </button>\r\n      </nav>\r\n  );\r\n}\r\n\r\nexport default NavComponent;\r\n","import React from \"react\";\r\nimport \"./HeaderComponent.css\";\r\nimport Nav from \"../NavComponent.js\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction HeaderComponent() {\r\n\r\n  return (\r\n    <>\r\n      <header className=\"App-header\">\r\n        <div className=\"header-container\">\r\n          <h2>\r\n            <NavLink to=\"/\">The Movie App</NavLink>\r\n          </h2>\r\n          <Nav />\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import React from 'react';\r\nimport './FooterComponent.css';\r\n\r\nfunction FooterComponent() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer-iner\">\r\n            <p>This app was made for studying</p>\r\n            <p>Big thanks for Api to <a href=\"https://www.themoviedb.org\">https://www.themoviedb.org</a></p>\r\n            </div>\r\n        </footer>   \r\n    )\r\n    \r\n}\r\n\r\nexport default FooterComponent","import React, {useState, useRef} from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport './SearchComponent.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { search } from \"../../redux/actions\";\r\n\r\n\r\nfunction SearchComponent() {\r\n  const inputRef = useRef();\r\n  const [count, setCount] = useState(0)\r\n  const [redirect, setRedirect] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  function submitHandle(e) {\r\n    e.preventDefault();\r\n    dispatch(search(inputRef.current.value))\r\n    setRedirect(true)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\" key={count}>\r\n      <div className=\"container\">\r\n        <form className=\"search-form\" onSubmit={submitHandle}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for a movie, tv show, person...\"\r\n            ref={inputRef}\r\n          />\r\n        </form>\r\n      </div>\r\n      {redirect ? <Redirect to=\"/search\"/> : ''}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchComponent;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction SearchCardComponent({item}) {\r\n\r\n    if (item.media_type === 'movie') {\r\n        return (\r\n            <div className=\"search-card\">\r\n                {item.poster_path ? \r\n                <Link to={`movies/details/${item.id}`}>\r\n                    <img src={`https://image.tmdb.org/t/p/original/${item.poster_path}`} alt=\"123\"/>\r\n                </Link>\r\n                 :\r\n                <img src=\"https://via.placeholder.com/500?text=Poster not found\" alt=\"123\"/>}\r\n                <p className=\"search-card-name\">{item.title}</p>\r\n                <p>Media type: {item.media_type}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (item.media_type === 'tv') {\r\n        return (\r\n            <div className=\"search-card\">\r\n               {item.poster_path ? \r\n                <Link to={`shows/details/${item.id}`}>\r\n                    <img src={`https://image.tmdb.org/t/p/original/${item.poster_path}`} alt=\"123\"/>\r\n                </Link> :\r\n                <img src=\"https://via.placeholder.com/500?text=Poster not found\" alt=\"123\"/>}\r\n                <p className=\"search-card-name\">{item.original_name}</p>\r\n                <p>Media type: {item.media_type} show</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"search-card\">\r\n                {item.profile_path ? \r\n                <Link to={`people/details/${item.id}`}>\r\n                 <img src={`https://image.tmdb.org/t/p/original/${item.profile_path}`} alt=\"123\"/>\r\n                </Link> :\r\n                <img src=\"https://via.placeholder.com/500?text=Poster not found\" alt=\"123\"/>}\r\n                <p className=\"search-card-name\">{item.name}</p>\r\n                <p>Media type: {item.media_type}</p>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default SearchCardComponent","import React, {useState, useEffect} from 'react';\r\nimport api from '../Api';\r\nimport SearchCardComponent from '../components/SearchCardComponent'\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst API = api();\r\n\r\nfunction Search() {\r\n    const [result, setResult] = useState(null)\r\n    const value = useSelector(state => state.appReducer.search)\r\n    \r\n    useEffect(() => {\r\n        fetch(`${API.name}/search/multi?api_key=${API.key}&query=${value}&language=en-US&page=1&include_adult=false`)\r\n        .then(resp => resp.json())\r\n        .then(resp => {\r\n          setResult(resp.results)\r\n        })\r\n      }, [value])\r\n    \r\n    \r\n    if (!result) {\r\n      return (\r\n        <div className=\"container\">\r\n          <h1>Loading...</h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"page-header\">\r\n          <h1>Search results</h1>\r\n        </div>\r\n        <div className=\"search-result\">\r\n        {result.map(el => <SearchCardComponent key={el.id} item={el}></SearchCardComponent>)}\r\n        </div>\r\n       \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nfunction Other() {\r\n    return (\r\n        <Redirect to=\"/\"/>\r\n    )\r\n}\r\n\r\nexport default Other;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch  } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getWidth } from \"./redux/actions\";\r\n\r\nimport Home from \"./pages/Home.js\";\r\nimport Movies from \"./pages/movies/Movies.js\";\r\nimport TopRatedMovies from \"./pages/movies/TopRatedMovies.js\";\r\nimport UpcomingMovies from \"./pages/movies/UpcomingMovies.js\";\r\nimport NowPlayingMovies from \"./pages/movies/NowPlayingMovies.js\";\r\nimport MovieDetails from \"./pages/movies/MovieDetails.js\";\r\n\r\nimport Shows from \"./pages/tv/Shows.js\";\r\nimport OnTVShows from \"./pages/tv/OnTvShows.js\";\r\nimport AiringTodayShows from \"./pages/tv/AiringTodayShows.js\";\r\nimport TopRatedShows from \"./pages/tv/TopRatedShows.js\";\r\nimport ShowDetails from \"./pages/tv/ShowDetails.js\";\r\nimport People from \"./pages/People.js\";\r\nimport PeopleDetails from \"./pages/people/PeopleDetails.js\"\r\nimport HeaderComponent from \"./components/HeaderComponent/HeaderComponent\";\r\nimport FooterComponent from './components/FooterComponent/FooterComponent.js';\r\nimport SearchComponent from \"./components/SearchComponent/SearchComponent.js\";\r\nimport Search from './pages/Search';\r\nimport Other from \"./components/Other\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n\r\n  function onResizeHandle() {\r\n   dispatch(getWidth(window.innerWidth))\r\n  }\r\n\r\n  window.addEventListener('resize', onResizeHandle)\r\n\r\n  return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <HeaderComponent />\r\n          <SearchComponent />\r\n          <div className=\"content\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/movies\" component={Movies} />\r\n              <Route exact path=\"/shows\" component={Shows} />\r\n              <Route exact path=\"/people\" component={People} />\r\n              <Route exact path=\"/movies/popular\" component={Movies} />\r\n              <Route exact path=\"/movies/top-rated\" component={TopRatedMovies} />\r\n              <Route exact path=\"/movies/upcoming\" component={UpcomingMovies} />\r\n              <Route exact path=\"/movies/now-playing\" component={NowPlayingMovies} />\r\n              <Route exact path=\"/movies/details/:id\" component={MovieDetails} />\r\n              <Route exact path=\"/shows/popular\" component={Shows} />\r\n              <Route exact path=\"/shows/on-tv\" component={OnTVShows} />\r\n              <Route exact path=\"/shows/airing-today\" component={AiringTodayShows} />\r\n              <Route exact path=\"/shows/top-rated\" component={TopRatedShows} />\r\n              <Route exact path=\"/shows/details/:id\" component={ShowDetails} />\r\n              <Route exact path=\"/people/details/:id\" component={PeopleDetails} />\r\n              <Route exact path=\"/search\" component={Search} />\r\n              <Route component={Other} /> \r\n            </Switch>\r\n          </div>\r\n\r\n          <FooterComponent />\r\n          \r\n        </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { SEARCH, GET_WIDTH } from \"./types\"\r\n\r\nconst initialState = {\r\n    search: null,\r\n    width: window.innerWidth\r\n}\r\n\r\nexport function appReducer(state = initialState, action) {\r\n    if (action.type === SEARCH) {\r\n        return {...state, search: action.payload}\r\n    } else if(action.type === GET_WIDTH) {\r\n        return {...state, width: action.payload}\r\n    }\r\n\r\n    return state\r\n}","import { GET_MOVIES, GET_SHOWS, GET_PEOPLE, GET_PERSON, CLEAR_PERSON_INFO } from \"./types\"\r\n\r\nconst initialState = {\r\n    movies: [],\r\n    shows: [],\r\n    people: [],\r\n    person: [],\r\n    pageCount: 0\r\n}\r\n\r\nexport function dataReducer(state = initialState, action) {\r\n    if (action.type === GET_MOVIES) {\r\n        return {...state, movies: action.payload}\r\n    } else if (action.type === GET_SHOWS) {\r\n        return {...state, shows: action.payload.movies, pageCount:action.payload.pageCount}\r\n    } else if (action.type === GET_PEOPLE) {\r\n        return {...state, people: action.payload}\r\n    } else if (action.type === GET_PERSON) {\r\n        return {...state, person: action.payload}\r\n    } else if (action.type === CLEAR_PERSON_INFO) {\r\n        return {...state, person: action.payload}\r\n    }\r\n\r\n    return state\r\n}","import { combineReducers } from \"redux\";\r\nimport {appReducer} from './appReducer'\r\nimport {dataReducer} from './dataReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    appReducer,\r\n    dataReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware} from 'redux';\r\nimport { rootReducer } from './redux/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(\r\n        rootReducer,\r\n        composeWithDevTools(applyMiddleware(thunk))\r\n    )\r\n\r\nconst app = () => {\r\n    return <Provider store={store}><App /></Provider>\r\n}\r\n\r\nReactDOM.render(app(), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}